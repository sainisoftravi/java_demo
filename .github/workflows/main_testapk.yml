name: Build and deploy Java project to Azure Function App - testapk

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_NAME: testapk # set this to your function app name on Azure
  PACKAGE_DIRECTORY: '.' # set this to the directory which contains build.gradle file
  JAVA_VERSION: '17' # set this to the java version to use

jobs:
  build-and-deploy:
    runs-on: windows-latest
    permissions:
      id-token: write # This is required for requesting the JWT

    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v4

      - name: Setup Java Sdk ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}

      - name: 'Restore Project Dependencies Using gradle'
        run: |
          cd ${{ env.PACKAGE_DIRECTORY }}
          ./gradlew clean build

      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_62908AE9835B4C7C8BE5CD8684D931BC }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_F4F67B6C236E41AB80F2B84BD6AD2841 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_6461F71C2EE94DA2939E92A0A08D967F }}


      - name: Curl the Azure Function App
        run: |
          curl -I https://${{ env.AZURE_FUNCTIONAPP_NAME }}.azurewebsites.net
      - name: Install Azure Functions Core Tools
        run: |
          npm install -g azure-functions-core-tools@3


      - name: 'Start the application'
        run: |
          cd ${{ env.PACKAGE_DIRECTORY }}
          touch nohup.out
          nohup ./gradlew bootRun > nohup.out 2>&1 &
          tail -f nohup.out
      - name: Wait for Application Startup
        run: sleep 60s
        
      - name: Curl the Azure Function App
        run: |
          curl -I https://${{ env.AZURE_FUNCTIONAPP_NAME }}.azurewebsites.net 
